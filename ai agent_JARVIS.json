{
  "name": "telegram ai agent",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -640,
        -80
      ],
      "id": "6bcb3160-1a62-48b0-a57c-b1cac57c9d22",
      "name": "Telegram Trigger",
      "webhookId": "1a46c086-234c-40e6-9e0e-f246a6009e12",
      "credentials": {
        "telegramApi": {
          "id": "mpHKDVii59HlxZmU",
          "name": "upskill_ai"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=reply the user message with your intelligence :  {{ $json.text }}\nName of the user : {{ $('Telegram Trigger').item.json.message.from.first_name }}",
        "options": {
          "systemMessage": "You are a helpful assistant who can call the tool based on user requirements\n1.SerpAPI : call this tool, when user ask to check the latest data in the internet or current news. do search web.\n2. Gmail: call this gmail tool if the user wants to send email to the customer/clients. structure the email very professionally and format them correctly. Just notify the status to the user if you send the email(email sent/failed/error)\n\nYour job is to:\n1. Ask the user for the recipient's email.\n2. Ask for the occasion or reason for the email.\n3. Generate a professional email using the following template format:\n{\n  \"to\": \"recipient@example.com\",\n  \"message\": \"HTML or plain text message body\"\n}\nIn message, First Greet leave some space down then write the body content then leave some spaces to write regards section\n\n\nRules:\n- Use a friendly, polite tone.\n- Format the message in simple HTML (e.g., use <p>, <b>, <br>).\n- Never send the email. Only return the JSON object.\n\nRespond to user like:\n\"Hi!<name> I can help you send an email. Please give the recipient's email address and the purpose of the email.\"\n\n3. calculator: call this tool, when user wants to calculate something\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        112,
        -32
      ],
      "id": "dd6e45af-cf88-4dd1-8238-6744c94658cd",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -144,
        192
      ],
      "id": "de9b4dde-2d78-42bb-ab88-ab966c088cbe",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "CZ32GrZZ4s21YFWZ",
          "name": "Udhaya API"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "=telegram_ {{ $json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -32,
        192
      ],
      "id": "30f261d2-8ff6-4f92-8fdd-d9a195f74762",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        672,
        -32
      ],
      "id": "9b898da8-a713-41d6-af5f-7c210e64cf34",
      "name": "Send a text message",
      "webhookId": "f7a29a78-b0a2-4af2-b029-9156626ab08d",
      "credentials": {
        "telegramApi": {
          "id": "mpHKDVii59HlxZmU",
          "name": "upskill_ai"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.toolSerpApi",
      "typeVersion": 1,
      "position": [
        128,
        176
      ],
      "id": "c2e79df5-727d-4601-8643-63ec9dcbb79b",
      "name": "SerpAPI",
      "credentials": {
        "serpApi": {
          "id": "LpONb09MdHCtHvCe",
          "name": "SerpAPI account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('To', ``, 'string') }}",
        "subject": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Subject', ``, 'string') }}",
        "message": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Message', ``, 'string') }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmailTool",
      "typeVersion": 2.1,
      "position": [
        224,
        192
      ],
      "id": "0b69487c-44e7-4363-9223-2dd7365f7370",
      "name": "Send a message in Gmail",
      "webhookId": "789032a9-ef0c-40c1-b5db-69ed38ef2271",
      "credentials": {
        "gmailOAuth2": {
          "id": "NreVnS6oXFDpnUSv",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "typeVersion": 1,
      "position": [
        336,
        192
      ],
      "id": "08e35eb9-b48f-49fb-a96d-389fa72fa0f2",
      "name": "Calculator"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    },
                    "id": "483867f6-1fd2-45d9-b1c9-9061cf450ea8"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "448d69ba-279a-48a3-8f34-2f646fd33cf3",
                    "leftValue": "={{ $json.message.text ||\"\"}}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -496,
        -80
      ],
      "id": "243836da-32ea-44ce-8ebc-47d5388ed7b6",
      "name": "Switch"
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -352,
        -224
      ],
      "id": "28ccf127-cddc-4cca-9943-afb8427635ec",
      "name": "Get a file",
      "webhookId": "529fa6ab-18b6-404a-915e-ea4a17637120",
      "credentials": {
        "telegramApi": {
          "id": "mpHKDVii59HlxZmU",
          "name": "upskill_ai"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {
          "temperature": 0.8
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -208,
        -224
      ],
      "id": "65bfc623-88b2-45a0-8090-45f3f6a1e63b",
      "name": "Transcribe a recording",
      "credentials": {
        "openAiApi": {
          "id": "CZ32GrZZ4s21YFWZ",
          "name": "Udhaya API"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "22f734ec-3bc5-466a-aa1f-9c375d03e489",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -336,
        48
      ],
      "id": "bebed501-81e4-4a48-9d5a-d1c1d522fb19",
      "name": "Input text"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "83da3064-e1a3-416c-abd4-ea1802c10865",
              "name": "text",
              "value": "={{ $json.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -64,
        -224
      ],
      "id": "da318a03-c0bd-4f37-9808-f21b77a9bd11",
      "name": "Input audio"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.output }}",
        "messages": {
          "messageValues": [
            {
              "type": "HumanMessagePromptTemplate",
              "message": "={{ $json.output }}"
            },
            {
              "message": "Summarize the input with the high accuracy, ensuring clarity and conciseness. Focus on delivering a contextually rich summary that is optimized for speech synthesis. remove redundant phrases, introductory statements, or closing remarks. The output  should be natural & engaging for an audio format."
            }
          ]
        },
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        496,
        -304
      ],
      "id": "1f9c7efc-afd5-430e-bfcd-f50aa3c18c28",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        480,
        -128
      ],
      "id": "01241663-7cba-45d2-b1a4-ab9db2f85162",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "CZ32GrZZ4s21YFWZ",
          "name": "Udhaya API"
        }
      }
    },
    {
      "parameters": {
        "operation": "sendAudio",
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "binaryData": true,
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1072,
        -304
      ],
      "id": "9ac0632b-d074-4265-9c05-6c9a7576b48c",
      "name": "Send an audio file",
      "webhookId": "7236f3dc-89c0-413f-9b8b-9bee47694537",
      "credentials": {
        "telegramApi": {
          "id": "mpHKDVii59HlxZmU",
          "name": "upskill_ai"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "input": "={{ $json.text }}",
        "voice": "nova",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        848,
        -304
      ],
      "id": "7bea4c19-b673-4cda-8015-95b2461939c6",
      "name": "TTS",
      "credentials": {
        "openAiApi": {
          "id": "CZ32GrZZ4s21YFWZ",
          "name": "Udhaya API"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SerpAPI": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Send a message in Gmail": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get a file",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Input text",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get a file": {
      "main": [
        [
          {
            "node": "Transcribe a recording",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording": {
      "main": [
        [
          {
            "node": "Input audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input text": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Input audio": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "TTS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "TTS": {
      "main": [
        [
          {
            "node": "Send an audio file",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "636f9e2b-fd20-4713-8abe-6ec8b5422a7e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "b1d3e0d12d68225d79d5e3accb75641b9894b530c76550be94c3f04d1958984a"
  },
  "id": "v2lmFyHM7yIW2evj",
  "tags": []
}
